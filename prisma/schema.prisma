// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int       @id @default(autoincrement())
  name     String
  email    String?
  password String?
  isAdmin  Boolean   @default(false) @map("is_admin")
  session  Session[]
  quiz     Quiz[]
  record   Record[]
}

model Session {
  id           Int      @id @default(autoincrement())
  refreshToken String   @map("refresh_token")
  createdAt    DateTime @default(now()) @map("created_at")
  user         User?    @relation(fields: [userId], references: [id])
  userId       Int?
}

model Quiz {
  id        Int        @id @default(autoincrement())
  userId    Int?       @map("user_id")
  user      User?      @relation(fields: [userId], references: [id])
  name      String
  details   String
  length    Int
  timeLimit Int        @map("time_limit")
  imageUrl  String     @map("image_url")
  question  Question[]
  record    Record[]
}

model Record {
  id        Int       @id @default(autoincrement())
  userId    Int       @map("user_id")
  user      User      @relation(fields: [userId], references: [id])
  quizId    Int       @map("quiz_id")
  quiz      Quiz      @relation(fields: [quizId], references: [id])
  score     Int
  time      Int
  createdAt DateTime  @default(now()) @map("created_at")
  deletedAt DateTime? @map("deleted_at")
}

model Question {
  id         Int       @id @default(autoincrement())
  text       String
  difficulty String
  choice     Choice[]
  quiz       Quiz?     @relation(fields: [quizId], references: [id])
  category   Category? @relation(fields: [categoryId], references: [id])
  categoryId Int?      @map("category_id")
  quizId     Int?      @map("quiz_id")
}

model Category {
  id       Int        @id @default(autoincrement())
  name     String
  question Question[]
}

model Choice {
  id         Int      @id @default(autoincrement())
  text       String
  isCorrect  Boolean  @default(false) @map("is_correct")
  questionId Int      @map("question_id")
  question   Question @relation(fields: [questionId], references: [id])
}
